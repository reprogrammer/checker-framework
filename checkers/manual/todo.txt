Necessary changes to the manual.

------------------------------------------------------

New section on concepts and annotations that apply to all type-systems and checkers

Where would a good place be for this?  At the beginning/end?  Split into multiple sections?

- Pre-/postconditions from a user perspective:
  - Explain the generic pre- and postcondition annotations: @EnsuresAnnotation/@EnsuresAnnotations, @EnsuresAnnotationIf/@EnsuresAnnotationsIf and @RequiresAnnotation/@RequiresAnnotations.
  - Explain what kind of strings are supported (see text near the end of this documentat; use that to augment the existing Checker Framework documentation).

- Pre-/postconditions from a developer perspective:
  - Explain the meta-annotations @PreconditionAnnotation, @ConditionalPostconditionAnnotation and @PostconditionAnnotation.

- Document -ANullnessChecker_option=value mechanism

------------------------------------------------------

The Javadoc for DefaultQualifieers uses ALL_EXCEPT_LOCALS in an example.
Replace it and document how to achieve CLIMB-to-top instead.

------------------------------------------------------

Decide what to say about @KeyFor strings.  Unfortunately not the same set of expressions is allowed as with pre/postconditions.

------------------------------------------------------

Explain relationship between XXXChecker and XXXAnnotatedTypeFactory:  if
the Checker is a subtype of BaseTypeChecker, the AnnotatedTypeFactory has
to be a subtype of AbstractBasicAnnotatedTypeFactory, because
BaseTypeVisitor assumes that.

We found a better naming scheme than Basic vs. Base; it needs to be documented.

------------------------------------------------------

Eclipse setup
-------------
Describe checker-framework.importorder and formatter.
Should these developer-focused configs be moved somewhere else?

------------------------------------------------------

Changelog

Don't forget to update the changelog if you make changes.

------------------------------------------------------
