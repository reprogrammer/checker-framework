import checkers.fenum.quals.SwingCompassDirection;
import checkers.fenum.quals.SwingBoxOrientation;
import checkers.fenum.quals.SwingElementOrientation;
import checkers.fenum.quals.SwingTextOrientation;


package javax.swing;

interface SwingConstants {
  //
  // The central position in an area. Used for
  // both compass-direction constants (NORTH, etc.)
  // and box-orientation constants (TOP, etc.).
  //
  @SwingCompassDirection
  @SwingBoxOrientation
  int CENTER  = 0;

  //
  // Box-orientation constant used to specify locations in a box.
  //
  @SwingBoxOrientation int TOP     = 1;
  @SwingBoxOrientation int LEFT    = 2;
  @SwingBoxOrientation int BOTTOM  = 3;
  @SwingBoxOrientation int RIGHT   = 4;

  //
  // Compass-direction constants used to specify a position.
  //
  @SwingCompassDirection int NORTH      = 1;
  @SwingCompassDirection int NORTH_EAST = 2;
  @SwingCompassDirection int EAST       = 3;
  @SwingCompassDirection int SOUTH_EAST = 4;
  @SwingCompassDirection int SOUTH      = 5;
  @SwingCompassDirection int SOUTH_WEST = 6;
  @SwingCompassDirection int WEST       = 7;
  @SwingCompassDirection int NORTH_WEST = 8;

  //
  // These constants specify a horizontal or
  // vertical orientation. For example, they are
  // used by scrollbars and sliders.
  //
  @SwingElementOrientation int HORIZONTAL = 0;
  @SwingElementOrientation int VERTICAL   = 1;

  //
  // Constants for orientation support, since some languages are
  // left-to-right oriented and some are right-to-left oriented.
  // This orientation is currently used by buttons and labels.
  //
  @SwingTextOrientation int LEADING  = 10;
  @SwingTextOrientation int TRAILING = 11;
  @SwingTextOrientation int NEXT = 12;
  @SwingTextOrientation int PREVIOUS = 13;
}