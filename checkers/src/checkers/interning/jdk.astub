import checkers.interning.quals.Interned;

// This file was generated by running the following commands:
//   cd ~/java/jdk/src
//   search -i -n '\bintern(|alized?|ed|ing)\b'
// and examining the search results.

package java.io;

public class ObjectStreamField
    implements Comparable<Object>
{
  public @Interned String getTypeString();
}

package java.lang;

// All instances of Class are interned.
@Interned class Class<T> { }

class String {
  @Interned String intern();
}

package java.lang.reflect;

class Field {
  public @Interned String getName();
}

class Method {
  public @Interned String getName();
}

package java.util;

public final class Locale implements Cloneable, Serializable {
  public @Interned String getCountry();
  public @Interned String getVariant();
}

package java.util.jar;

public class Attributes implements Map<Object,Object>, Cloneable {
  public @Interned String toString();
}

package javax.management;

public class MBeanServerPermission extends BasicPermission {
  static @Interned String getCanonicalName(int mask);
}

package javax.swing;

public class DefaultListCellRenderer extends JLabel
    implements ListCellRenderer<Object>, Serializable
{
    protected void firePropertyChange(@Interned String propertyName, Object oldValue, Object newValue);
}

package javax.swing.tree;

public class DefaultTreeCellRenderer extends JLabel implements TreeCellRenderer
{
  protected void firePropertyChange(@Interned String propertyName, Object oldValue, Object newValue);
}

package javax.swing.table;

public class DefaultTableCellRenderer extends JLabel
    implements TableCellRenderer, Serializable
{
  protected void firePropertyChange(@Interned String propertyName, Object oldValue, Object newValue);
}

package org.xml.sax.helpers;

public class NamespaceSupport
{
  public @Interned String [] processName (String qName, String parts[],
                                          boolean isAttribute);
  // These are not necessary, it seems.
  // final class Context {
  //     @Interned String [] processName (String qName, boolean isAttribute);
  // }
  // final class AttributeListAdapter implements Attributes
  // {
  //     public @Interned String getQName (int i);
  //     public @Interned String getType (int i);
  //     public @Interned String getType (String uri, String localName);
  //     public @Interned String getType (String qName);
  // }

}


package com.sun.org.apache.xml.internal.utils;

public class NamespaceSupport2 extends org.xml.sax.helpers.NamespaceSupport
{
  public @Interned String [] processName (String qName, String[] parts,
                                          boolean isAttribute);
}


package com.sun.org.apache.xml.internal.security.utils;

public abstract class ElementProxy {
  public static @Interned String getDefaultPrefix(String namespace);
  public static @Interned String getDefaultPrefixBindings(String namespace);
}

// TODO:
// package com.sun.org.apache.xerces.*;
// (Rather than having Xerces half-finished, leave it completely un-done.)x1

package com.sun.org.apache.bcel.internal.util;

public class ClassPath implements Serializable {
  public static final @Interned String getClassPath();
}

package com.sun.jmx.mbeanserver;

public class Repository {
  public @Interned String getDefaultDomain();
}
