<!--
  This is an Ant build file for compiling shared utilities.
-->
<project name="javacutils" default="dist" basedir=".">

    <description>
      Builds a library of utilities shared by sub-projects in the Checker Framework.
    </description>

    <property name="src" value="src"/>
    <property name="build" value="build"/>
    <property file="build.${os.name}.properties"/>
    <property file="build.properties"/>

    <property name="dist.file" value="javacutils.jar"/>

    <property name="tmpdir" value="${java.io.tmpdir}/${user.name}/${ant.project.name}" />

    <property name="compiler.version.goal" value="javac 1.7.0-jsr308-${build.version}"/>

    <path id="build.path">
        <pathelement location="${compiler.lib}"/>
    </path>

    <!-- Used to have:
           depends="touch-jdk"
         When is that truly necessary? -->
    <target name="prep" description="Create required directories">
        <mkdir dir="${build}"/>

        <java fork="true"
              outputproperty="compiler.version"
              classname="com.sun.tools.javac.Main">
          <jvmarg line="-Xbootclasspath/p:${compiler.lib}"/>
          <arg line="-version"/>
        </java>

        <property name="compiler.exists" value="true"/>
        <condition property="compiler.exists">
           <equals
             arg1="${compiler.version}"
             arg2="${compiler.version.goal}"/>
        </condition>

    </target>

    <target name="clean" description="Remove generated files">
        <delete dir="${build}"/>
        <delete file="${dist.file}"/>
    </target>

    <target name="build.check.uptodate"
            description="Set properties: filesets and build.uptodate">
        <fileset id="src.files" dir="${src}">
            <include name="**/*.java"/>
        </fileset>

        <uptodate property="src.files.uptodate" targetfile="${build}">
          <srcfiles refid="src.files"/>
          <mapper type="glob" from="*.java" to="${build}/*.class"/>
        </uptodate>
    </target>

    <target name="build" depends="prep,build.check.uptodate" unless="build.uptodate"
            description="Compile files.  Does not update jsr308-all.jar">
        <fail unless="compiler.exists"
            message="
Needed version ${compiler.version.goal} of the JSR 308 compiler,
but found version ${compiler.version} on your classpath.
${line.separator}${line.separator}
Check that the 'compiler.lib' property in 'build.properties' points to version
${build.version} of the 'javac.jar' library."/>

        <pathconvert pathsep=" " property="src.files.spaceseparated">
            <path>
                <fileset dir="${src}">
                    <include name="**/*.java"/>
                    <exclude name="checkers/util/dist/**"/>
                </fileset>
            </path>
        </pathconvert>
        <java fork="true"
              failonerror="true"
              classpath="${compiler.lib}:${annotation-utils.lib}:${jna.lib}:${tests.junit}"
              classname="com.sun.tools.javac.Main">
            <jvmarg line="-Xbootclasspath/p:${compiler.lib}"/>
            <arg value="-g"/>
            <arg line="-sourcepath ${src}"/>
            <arg line="-d ${build}"/>
            <arg line="${src.files.spaceseparated}"/>
            <arg line="-version"/>
        </java>
        <!--
        Touch doesn't work on a directory, so can't do:
           <touch file="${build}"/>
        Instead, create and remove a file, which modifies the directory.
        -->
        <touch file="${build}/.timestamp"/>
        <delete file="${build}/.timestamp"/>
    </target>

    <target name="dist" depends="build" description="Create jar file">
      <jar destfile="${dist.file}" basedir="${build}"/>
    </target>

    <target name="docs" depends="javadoc"/>

    <!--
    This target seems to only work if tools.jar is already in the
    classpath (despite the attempt in the body to add tools.jar to the
    classpath).  Also, ${java.home} is the jre/ directory.
    -->
    <target name="javadoc" depends="prep" description="Create Javadoc documentation">
        <java fork="true"
              failonerror="true"
              classpath="${compiler.lib}:${javadoc.lib}:${java.home}/../lib/tools.jar"
              classname="com.sun.tools.javac.Main">
            <jvmarg line="-Xbootclasspath/p:${compiler.lib}:${javadoc.lib}"/>
            <arg value="-g"/>
            <arg line="-d ${build}"/>
            <arg line="-version"/>
        </java>
        <!-- This relative path is wrong; running "ant -find" from a
        subdirectory fails. -->
        <javadoc sourcepath="${src}" destdir="${dist.doc}" failonerror="true"
            executable="${jsr308.langtools}/dist/bin/javadoc"
          classpath="${build}:${compiler.lib}:${javadoc.lib}:${java.home}/../lib/tools.jar:${jna.lib}:tests/junit-4.7.jar"
          bootclasspath="${compiler.lib}:${javadoc.lib}:${java.home}/lib/rt.jar">
          <package name="checkers.*"/>
          <link href="http://docs.oracle.com/javase/7/docs/api/"/>
          <link href="http://docs.oracle.com/javase/7/docs/jdk/api/javac/tree/"/>
        </javadoc>
    </target>

    <target name="tags" depends="prep" description="Create Emacs TAGS table">
        <exec executable="/bin/sh" failonerror="true">
            <arg value="-c"/>
            <arg value="etags `find . \( -name jdk \) -prune -o -name '*.java' -print | sort-directory-order`"/>
        </exec>
    </target>

</project>
