<!--
  This is an Ant build file for compiling shared javac utilities.
-->
<project name="javacutils" default="dist" basedir=".">

    <description>
        Builds a library of utilities shared by sub-projects in the Checker Framework.
    </description>

    <property file="build.${os.name}.properties"/>
    <property file="build.properties"/>
    <property file="${basedir}/../build-common.properties"/>

    <import file="${basedir}/../build-common.xml"/>


    <target name="prep" depends="prep-all"
            description="Create required directories">
        <mkdir dir="${build}"/>
    </target>

    <target name="clean" description="Remove generated files">
        <delete dir="${build}"/>
        <delete file="${javacutils.lib}"/>
        <delete dir="${dist.doc}"/>
        <delete dir="${temp.dir}"/>
    </target>

    <target name="build.check.uptodate"
            description="Set properties: filesets and build.uptodate">
        <fileset id="src.files" dir="${src}">
            <include name="**/*.java"/>
        </fileset>

        <uptodate property="src.files.uptodate" targetfile="${build}">
            <srcfiles refid="src.files"/>
            <mapper type="glob" from="*.java" to="${build}/*.class"/>
        </uptodate>
    </target>

    <target name="build" depends="prep,build.check.uptodate"
            unless="build.uptodate"
            description="Compile files.  Does not update any jars">
        <pathconvert pathsep=" " property="src.files.spaceseparated_jc">
            <path>
                <fileset dir="${src}">
                    <include name="**/*.java"/>
		    <!-- ManualTaglet should probably be somewhere else rather than in this directory. -->
                    <exclude name="javacutils/dist/**"/>
                </fileset>
            </path>
        </pathconvert>

        <echo message="${src.files.spaceseparated_jc}" file="${tmpdir}/srcfiles-javacutils.txt"/>
        <java fork="true"
              failonerror="true"
              classpath="${javac.lib}"
              classname="com.sun.tools.javac.Main">
            <jvmarg line="-Xbootclasspath/p:${javac.lib}"/>
            <arg value="-g"/>
            <arg line="-sourcepath ${src}"/>
            <arg line="-d ${build}"/>
            <arg line="@${tmpdir}/srcfiles-javacutils.txt"/>
            <arg line="-version"/>
            <arg line="-XDTA:noannotationsincomments"/>
            <arg line="-Xlint"/>
            <arg line="-Werror"/>
        </java>
        <delete file="${tmpdir}/srcfiles-javacutils.txt"/>

        <!--
        Touch doesn't work on a directory, so can't do:
           <touch file="${build}"/>
        Instead, create and remove a file, which modifies the directory.
        -->
        <touch file="${build}/.timestamp"/>
        <delete file="${build}/.timestamp"/>
    </target>

    <!-- TODO: add a type-checking target that doesn't use
         -XDTA:noannotations in comments. -->

    <target name="dist" depends="build" description="Create jar file">
        <jar destfile="${javacutils.lib}" basedir="${build}"/>
    </target>

    <target name="docs" depends="javadoc"/>

    <!--
    This target seems to only work if tools.jar is already in the
    classpath (despite the attempt in the body to add tools.jar to the
    classpath).  Also, ${java.home} is the jre/ directory.
    -->
    <target name="javadoc" depends="prep" description="Create Javadoc documentation">
        <java fork="true"
              failonerror="true"
              classpath="${javac.lib}:${javadoc.lib}:${java.home}/../lib/tools.jar"
              classname="com.sun.tools.javac.Main">
            <jvmarg line="-Xbootclasspath/p:${javac.lib}:${javadoc.lib}"/>
            <arg value="-g"/>
            <arg line="-d ${build}"/>
            <arg line="src/javacutils/dist/ManualTaglet.java"/>
            <arg line="-version"/>
        </java>

        <!-- This relative path is wrong; running "ant -find" from a
        subdirectory fails. -->
        <javadoc sourcepath="${src}" destdir="${dist.doc}"
                 failonerror="true"
                 executable="${jsr308.langtools}/dist/bin/javadoc"
                 classpath="${build}:${javac.lib}:${javadoc.lib}:${java.home}/../lib/tools.jar"
                 bootclasspath="${javac.lib}:${javadoc.lib}:${java.home}/lib/rt.jar">
            <package name="javacutils.*"/>
            <link href="http://types.cs.washington.edu/checker-framework/api/jdk/"/>
            <link href="http://types.cs.washington.edu/checker-framework/api/javac/tree/"/>
            <taglet name="javacutils.dist.ManualTaglet" path="${build}"/>
            <arg line="-XDTA:noannotationsincomments"/>
        </javadoc>
    </target>

</project>
